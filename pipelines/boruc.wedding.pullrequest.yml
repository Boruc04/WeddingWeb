name: Boruc.WeddingWeb.PullRequest-$(FullSemVer)

resources:
  repositories:
  - repository: WeddingWeb
    type: GitHub
    name: Boruc04/WeddingWeb
    endpoint: github.com_Boruc04
    pr:
      autoCancel: true
      branches:
        include:
          - feature/*
          - bugfix/*
          - hotfix/*
        exclude:
          - master
      paths:
        include:
        - src
      drafts: false

stages:
- stage: Build
  displayName: Wedding.Web.Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      - name: projectPath
        value: ''
      - name: buildConfiguration
        value: 'Release'

    steps:
    - checkout: WeddingWeb
    - task: UseDotNet@2
      inputs:
        version: '3.1.x'
      displayName: Use Dot Net.

    - task: gitversion/setup@0
      inputs:
        versionSpec: '5.x'

    - task: gitversion/execute@0
      inputs:
        useConfigFile: true
        configFilePath: './pipelines/GitVersion/GitVersion.yml'
        additionalArguments: '/updateprojectfiles'

- stage: CreateTestEnvironment
  # dependsOn: [Build]
  # condition: succeeded()
  displayName: Wedding.Web.TerraformApply
  jobs:
  - deployment: Test
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'wedding-web-test'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: WeddingWeb

            - task: TerraformInstaller@0
              inputs:
                terraformVersion: '0.12.3'

            - task: TerraformTaskV1@0
              inputs:
                provider: 'azurerm'
                command: 'init'
                workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure/terraform/'
                backendServiceArm: 'Subskrypcja programu Visual Studio Professional(a8f64608-16de-41a8-880a-c0b812cebad3)'
                backendAzureRmResourceGroupName: 'boruc-common-eu-rg'
                backendAzureRmStorageAccountName: 'weddingwebterraform'
                backendAzureRmContainerName: 'terraform'
                backendAzureRmKey: 'terraform.tfstate'

            - task: TerraformTaskV1@0
              inputs:
                provider: 'azurerm'
                command: 'plan'
                workingDirectory: '''$(System.DefaultWorkingDirectory)/infrastructure/terraform/'''
                environmentServiceNameAzureRM: 'Subskrypcja programu Visual Studio Professional(a8f64608-16de-41a8-880a-c0b812cebad3)'

            - task: TerraformTaskV1@0
              inputs:
                provider: 'azurerm'
                command: 'apply'
                workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure/terraform/'
                commandOptions: '-auto-approve'
                environmentServiceNameAzureRM: 'Subskrypcja programu Visual Studio Professional(a8f64608-16de-41a8-880a-c0b812cebad3)'

- stage: DestoryTestEnvironment
  dependsOn: [CreateTestEnvironment]
  condition: succeeded()
  displayName: Wedding.Web.TerraformDestroy
  jobs:
  - deployment: Test
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'wedding-web-test'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: WeddingWeb

            - task: TerraformInstaller@0
              inputs:
                terraformVersion: '0.12.3'

            - task: TerraformTaskV1@0
              inputs:
                provider: 'azurerm'
                command: 'destroy'
                workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure/terraform/'
                environmentServiceNameAzureRM: 'Subskrypcja programu Visual Studio Professional(a8f64608-16de-41a8-880a-c0b812cebad3)'

